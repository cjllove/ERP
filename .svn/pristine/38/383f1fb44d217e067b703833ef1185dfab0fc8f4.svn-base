using System;
using FineUIPro;
using Oracle.ManagedDataAccess.Client;
using XTBase;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Data;
using System.IO;
using System.Linq;
using System.Text;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

namespace SPDProject.CertificateInput
{
    public partial class CertificateCatInput : PageBase
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                DataInit();
            }
        }

        private void DataInit()
        {
            PubFunc.DdlDataGet("DDL_LICENSETYPE_W", ddlOBJUSER, lstOBJUSER);
            PubFunc.DdlDataGet("DDL_LICENSESTATUS_W", ddlFLAG, lstFLAG);
            dataSearch();
        }

        protected void btnSearch_Click(object sender, EventArgs e)
        {
            dataSearch();
        }
        private void dataSearch()
        {
            int total = 0;
            string sql = @"select CODE,NAME,DECODE(FLAG, '1', '待生效', '2', '有效', '3','停用','4','失效','5','删除') flag,
                                DECODE(OBJUSER,'SUP_LIC','供应商证照','PRO_LIC','生产厂家证照','SER_LIC','售后机构证照','AGE_LIC','代理商证照','GOODS_LIC','商品证照','SUPC_LIC','承诺书') objuser,
                                decode(isneed,'Y','是','N','否') isneed,
                                decode(isdate,'Y','是','N','否') isdate,
                                decode(isdup,'Y','是','N','否') isdup,
                                memo, SORT from  doc_license WHERE 1=1";
            string strFLAG = lstFLAG.SelectedValue.ToString();
            string strOBJUSER = lstOBJUSER.SelectedValue.ToString();
            if (!string.IsNullOrWhiteSpace(strFLAG))
            {
                sql += " and FLAG = '" + strFLAG + "'";
            }
            if (!string.IsNullOrWhiteSpace(strOBJUSER))
            {
                sql += " and OBJUSER = '" + strOBJUSER + "'";
            }
            if (!string.IsNullOrEmpty(txtName.Text.Trim()))
            {
                sql += " and Name LIKE '%" + txtName.Text.Trim() + "%'";

            }
            string query = "%";
            //if (!string.IsNullOrWhiteSpace(tgbSearch.Text))
            //{
            //    query = tgbSearch.Text.Trim();
            //    sql += string.Format(" and ( CODE like '%{0}%' or NAME like '%{0}%')", query);
            //}
            DataTable dtData = PubFunc.DbGetPage(GridSupplier.PageIndex, GridSupplier.PageSize, sql, ref total);
            GridSupplier.RecordCount = total;
            GridSupplier.DataSource = dtData;
            //GridSupplier.DataSource = DbHelperOra.Query(string.Format(sql, query));
            GridSupplier.DataBind();
        }

        protected void GridSupplier_RowDoubleClick(object sender, GridRowClickEventArgs e)
        {
            tbxCODE.Enabled = false;
            hfdIsNew.Text = "N";
            string strCode = GridSupplier.Rows[e.RowIndex].Values[1].ToString();
            string strSql = string.Format("select * from doc_license where code='{0}'", strCode);

            DataTable dtProducer = DbHelperOra.Query(strSql).Tables[0];
            if (dtProducer.Rows.Count > 0)
            {
                PubFunc.FormDataSet(FormProducer, dtProducer.Rows[0]);
            }
        }

        protected void btnNew_Click(object sender, EventArgs e)
        {
            PubFunc.FormDataClear(FormProducer);
            hfdIsNew.Text = "Y";
            tbxCODE.Enabled = true;
        }

        protected void btnSave_Click(object sender, EventArgs e)
        {
            MyTable mtType = new MyTable("DOC_LICENSE");
            if (PubFunc.FormDataCheck(FormProducer).Length > 1)
            {
                return; //存在为空的非空列则返回！
            }
            if ((DbHelperOra.Exists("select 1 from DOC_LICENSE where code = '" + tbxCODE.Text + "'")) && (!hfdIsNew.Text.Equals("N")))
            {
                Alert.Show("此证照编码已经存在,请重新输入!");
                return;
            }
            if (string.IsNullOrWhiteSpace(ddlFLAG.SelectedValue))
            {
                Alert.Show("请选择证照类别状态！", "提示", MessageBoxIcon.Information);
                return;
            }
            mtType.ColRow = PubFunc.FormDataHT(FormProducer);


            if (hfdIsNew.Text == "" || hfdIsNew.Text == "Y")
            {
                mtType.InsertExec();
            }
            else
            {
                mtType.UpdateExec("");
            }

            Alert.Show("数据保存成功！");
            dataSearch();
            //hfdIsNew.Text = "N";
        }

        protected void btnDelete_Click(object sender, EventArgs e)
        {
            int[] rows = GridSupplier.SelectedRowIndexArray;
            if (rows.Length > 0)
            {
                string code = "";
                foreach (int index in rows)
                {
                    code += PubFunc.GridDataGet(GridSupplier, index)["CODE"].ToString() + ",";
                }
                code = code.TrimEnd(',').Replace(",", "','");
                //DataTable DT = DbHelperOra.Query("select licensetype from sup_license_sup where licensetype in(select code from doc_license where code in ('" + code + "')) ").Tables[0];
                //DataTable DT1 = DbHelperOra.Query("select licensetype from SUP_LICENSE_GOODS where licensetype in (select code from doc_license where code in ('" + code + "'))").Tables[0];
                //if (DT.Rows.Count > 0 || DT1.Rows.Count > 0)
                //{
                //    Alert.Show("该证照类别正在使用无法删除！", "提示", MessageBoxIcon.Information);
                //    return;
                //}

                DbHelperOra.ExecuteSql("DELETE FROM DOC_LICENSE WHERE CODE IN ('" + code + "')");
                Alert.Show("证照类别【" + code + "】删除成功！");

                dataSearch();
            }
            else
            {
                Alert.Show("请选择要删除的证照类别！");
            }
        }
        protected void Grid1_PageIndexChange(object sender, GridPageEventArgs e)
        {
            GridSupplier.PageIndex = e.NewPageIndex;
            dataSearch();
        } 
    }
}