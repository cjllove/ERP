using FineUIPro;
using Newtonsoft.Json.Linq;
using XTBase;
using XTBase.Utilities;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace SPDProject.SpdQuery
{
    public partial class SupplierCategoryRK : PageBase
    {
        protected void Page_Load(object sender, EventArgs e)
        {

            if (!IsPostBack)
            {
                // 在页面第一次加载时 
                BindDDL();
            }
        }

        private void BindDDL()
        {
            PubFunc.DdlDataGet("DDL_DOC_SUPID", docSUPID);
            DepartmentBind.BindDDL("DDL_SYS_DEPOTRANGE", UserAction.UserID, ddlDEPTOUT);
            dpkRQ1.SelectedDate = DateTime.Now.AddDays(-30);
            dpkRQ2.SelectedDate = DateTime.Now;
        }

        private string GetQuerySql()
        {
                  StringBuilder sbSql = new StringBuilder();
                  sbSql.AppendFormat(@"SELECT SUPID,SUPNAME, NVL(SUM(DZYHJE), 0) DZYHJE,
                                               NVL(SUM(FSCLJE), 0) FSCLJE,
                                               NVL(SUM(HYCLJE), 0) HYCLJE,
                                               NVL(SUM(KQCLJE), 0) KQCLJE,
                                               (NVL(SUM(TOTALJE), 0) - NVL(SUM(DZYHJE), 0) - NVL(SUM(FSCLJE), 0) -
                                               NVL(SUM(HYCLJE), 0) - NVL(SUM(KQCLJE), 0)) MOREJE,
                                               NVL(SUM(TOTALJE), 0) TOTALJE
                                          FROM (SELECT SUPID,SUPNAME, CASE
                                                         WHEN CATID LIKE ('212302%') THEN
                                                          HSJE
                                                       END DZYHJE,
                                                       CASE
                                                         WHEN CATID = '21230105' THEN
                                                          HSJE
                                                       END FSCLJE,
                                                       CASE
                                                         WHEN CATID = '21230109' THEN
                                                          HSJE
                                                       END HYCLJE,
                                                       CASE
                                                         WHEN CATID = '21230112' THEN
                                                          HSJE
                                                       END KQCLJE,
                                                       CASE
                                                         WHEN CATID LIKE ('2123%') THEN
                                                          HSJE
                                                       END TOTALJE
                                                  FROM (SELECT DGJ.HSJE, DGJ.SUPID,DS.SUPNAME, DGJ.CATID
                                                          FROM DAT_GOODSJXC DGJ, DOC_GOODS DG, DOC_SUPPLIER DS
                                                         WHERE DGJ.GDSEQ = DG.GDSEQ(+)
                                                           AND DGJ.SUPID = DS.SUPID(+)
                                                           AND DS.ISSUPPLIER = 'Y'
                                                           AND DGJ.BILLTYPE IN ('RKD','THD')
                                                           AND TRUNC(DGJ.RQSJ,'dd') BETWEEN TRUNC(TO_DATE('{0}','YYYY-MM-DD HH24:MI:SS'),'dd') AND TRUNC(TO_DATE('{1}','YYYY-MM-DD HH24:MI:SS'),'dd')
                                                           AND DGJ.SUPID LIKE NVL('{2}','%')
                                                           AND DGJ.DEPTID LIKE NVL('{3}','%') ))
                                         ", dpkRQ1.Text, dpkRQ2.Text,docSUPID.SelectedValue,ddlDEPTOUT.SelectedValue);

          
            sbSql.Append(@"GROUP BY SUPID,SUPNAME ORDER BY SUPNAME");

            return sbSql.ToString();
        }

        private void OutputSummaryData(DataTable source)
        {
            decimal sum_dzyhje = 0, sum_fsclje = 0, sum_hyclje = 0, sum_kqclje = 0, sum_moreje = 0, sum_totalje = 0;
            foreach (DataRow row in source.Rows)
            {
                sum_dzyhje += Convert.ToDecimal(row["DZYHJE"]);
                sum_fsclje += Convert.ToDecimal(row["FSCLJE"]);
                sum_hyclje += Convert.ToDecimal(row["HYCLJE"]);
                sum_kqclje += Convert.ToDecimal(row["KQCLJE"]);
                sum_moreje += Convert.ToDecimal(row["MOREJE"]);
                sum_totalje += Convert.ToDecimal(row["TOTALJE"]);
               
            }
            JObject summary = new JObject();
            summary.Add("SUPNAME", "汇总合计");
            summary.Add("DZYHJE", sum_dzyhje.ToString("F2"));
            summary.Add("FSCLJE", sum_fsclje.ToString("F2"));
            summary.Add("HYCLJE", sum_hyclje.ToString("F2"));
            summary.Add("KQCLJE", sum_kqclje.ToString("F2"));
            summary.Add("MOREJE", sum_moreje.ToString("F2"));
            summary.Add("TOTALJE", sum_totalje.ToString("F2"));
            GridSupKC.SummaryData = summary;
        }

        protected void btnQuery_Click(object sender, EventArgs e)
        {
            if (dpkRQ1.SelectedDate == null || dpkRQ2.SelectedDate == null)
            {
                Alert.Show("请输入条件【查询期间】！");
                return;
            }
            else if (dpkRQ1.SelectedDate > dpkRQ2.SelectedDate)
            {
                Alert.Show("开始日期大于结束日期，请重新输入！");
                return;
            }
           
            DataTable dtData = DbHelperOra.Query(GetQuerySql()).Tables[0]; 
           OutputSummaryData(dtData);
            GridSupKC.DataSource = dtData;
            GridSupKC.DataBind();
        }

        protected void GridSupKC_RowDataBound(object sender, FineUIPro.GridRowEventArgs e)
        {

        }

        protected void GridSupKC_RowDoubleClick(object sender, FineUIPro.GridRowClickEventArgs e)
        {

        }

        protected void btnExport_Click(object sender, EventArgs e)
        {
            if (dpkRQ1.SelectedDate == null || dpkRQ2.SelectedDate == null)
            {
                Alert.Show("请输入条件【查询期间】！");
                return;
            }
            else if (dpkRQ1.SelectedDate > dpkRQ2.SelectedDate)
            {
                Alert.Show("开始日期大于结束日期，请重新输入！");
                return;
            }
            DataTable dtData = DbHelperOra.Query(GetQuerySql()).Tables[0];
            if (dtData == null || dtData.Rows.Count == 0)
            {
                Alert.Show("没有数据,无法导出！");
                return;
            }
            string[] columnNames = new string[GridSupKC.Columns.Count - 1];
            for (int index = 1; index < GridSupKC.Columns.Count; index++)
            {
                GridColumn column = GridSupKC.Columns[index];
                if (column is FineUIPro.BoundField)
                {
                    dtData.Columns[((FineUIPro.BoundField)(column)).DataField.ToUpper()].ColumnName = column.HeaderText;
                    columnNames[index - 1] = column.HeaderText;
                }
            }
            ExcelHelper.ExportByWeb(dtData.DefaultView.ToTable(true, columnNames), "供应商分类入库统计", string.Format("供应商分类入库统计_{0}.xls", DateTime.Now.ToString("yyyyMMddHHmmss")));
        }
    }
}