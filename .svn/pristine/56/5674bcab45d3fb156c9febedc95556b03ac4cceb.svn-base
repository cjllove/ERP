using FineUIPro;
using XTBase;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.IO;
using System.Transactions;
using Oracle.ManagedDataAccess.Client;
using System.Text.RegularExpressions;
using XTBase.Utilities;

namespace SPDProject.SpdStorage
{
    public partial class sldUpload : BillBase
    {

        private string strSql = @"SELECT A.BILLNO BILLNO,
                            f_getdeptname(A.deptout) deptout,
                            f_getdeptname(A.deptoutname) deptoutname,
                            A.deptid,
                            A.deptname,
                            A.catid,
                            A.xsrq,
                            A.gdseq,
                            A.barcode,
                            NVL(B.HISNAME, B.GDNAME) GDNAME,
                            f_getunitname(B.UNIT) UNIT,
                            A.gdspec,
                            A.gdmode,
                            A.hwid,
                            A.dhsl,
                            A.ph,
                            A.pzwh,
                            A.rq_sc,
                            A.yxqz
                        FROM DAT_SL_IMP A, DOC_GOODS B
                        WHERE A.GDSEQ = B.GDSEQ(+)
                        ";
        protected void Page_Load(object sender, EventArgs e)
        {
            if(!IsPostBack)
            {
                DataInit();
                lstLRRQ1.SelectedDate = System.DateTime.Now;
            }
        }

        private void DataInit()
        {
            PubFunc.DdlDataGet("DDL_USERALL", lstLRY);
        }

        protected void btnSearch_Click(object sender, EventArgs e)
        {
            if (lstLRRQ1.SelectedDate == null)
            {
                Alert.Show("请输入条件【录入日期】！");
                return;
            }
            string strSearch = "";

            if (lstBILLNO.Text.Length > 0)
            {
                strSearch += string.Format(" AND A.BILLNO  LIKE '%{0}%'", lstBILLNO.Text);
            }
                
            strSearch += string.Format(" AND A.FLAG='S'");

            if (lstLRY.SelectedItem != null && lstLRY.SelectedItem.Value.Length > 0)
            {
                strSearch += string.Format(" AND A.LRY='{0}'", UserAction.UserID);
            }

            strSearch += string.Format(" AND  A.LRRQ>=TO_DATE('{0}','YYYY-MM-DD')", lstLRRQ1.Text);

            if (!string.IsNullOrWhiteSpace(strSearch))
            {
                strSql += strSearch;
            }
            GridList.DataSource = DbHelperOra.Query(strSql).Tables[0];
            GridList.DataBind();
        }
        protected void btnClear_Click(object sender, EventArgs e)
        {
            try
            {
                fuDocument.Reset();
                GridStock.DataSource = null;
                GridStock.DataBind();
            }
            catch
            {
                Alert.Show("没有数据哦！");
            }
        }

        protected void btnclearall_Click(object sender,EventArgs e)
        {
            fuDocument.Reset();
            GridStock.DataSource = null;
            GridStock.DataBind();
        }

        protected void btnSave_Click(object sender, EventArgs e)
        {
            //校验
            if (!DbHelperOra.Exists("SELECT 1 FROM dat_sl_imp WHERE LRY = '" + UserAction.UserID + "' AND FLAG = 'N'"))
            {
                Alert.Show("不存在可生成单据的数据，请检查！", "提示信息", MessageBoxIcon.Warning);
                return;
            }

            OracleParameter[] parameters = new OracleParameter[]
                                {
                                     new OracleParameter("V_USER",OracleDbType.Varchar2),
                                     new OracleParameter("V_OPER",OracleDbType.Varchar2),
                                     new OracleParameter("V_SEQNO",OracleDbType.Varchar2),
                                };

            parameters[0].Value = UserAction.UserID;
            parameters[1].Value = @"SL_SUMBIT";
            parameters[2].Value = hfdseqno.Text;
            try
            {
                DbHelperOra.RunProcedure("P_SL_IMPORT", parameters);
                Alert.Show("提交成功，已生成对应单据信息！", "提示信息", MessageBoxIcon.Information);
                GridStock.DataSource = null;
                GridStock.DataBind();
                btnSave.Enabled = false;
            }
            catch (Exception ex)
            {
                Alert.Show(ex.Message, "错误", MessageBoxIcon.Error);
            }
        }

        //public static string str = "";

        protected void btnSelect_Click(object sender, EventArgs e)
        {
            #region 导入
            if (this.fuDocument.HasFile)
            {
                string toFilePath = "~/SpdUpload/DownloadExcel/";

                //获得文件扩展名
                string fileNameExt = Path.GetExtension(this.fuDocument.FileName).ToLower();

                if (!ValidateFileType(fileNameExt))
                {
                    Alert.Show("无效的文件类型！", "消息提示", MessageBoxIcon.Warning);
                    return;
                }

                //验证合法的文件
                if (CheckFileExt(fileNameExt))
                {
                    //生成将要保存的随机文件名
                    string fileName = this.fuDocument.FileName.Substring(0, this.fuDocument.FileName.IndexOf(".")) + DateTime.Now.ToString("yyyyMMddHHmmss") + fileNameExt;

                    //按日期归类保存
                    string datePath = DateTime.Now.ToString("yyyyMM") + "/" + DateTime.Now.ToString("dd") + "/";
                    toFilePath += datePath;

                    //获得要保存的文件路径
                    string DownloadUrl = toFilePath + fileName;
                    //物理完整路径                    
                    string toFileFullPath = HttpContext.Current.Server.MapPath(toFilePath);

                    //检查是否有该路径,没有就创建
                    if (!Directory.Exists(toFileFullPath))
                    {
                        Directory.CreateDirectory(toFileFullPath);
                    }

                    //将要保存的完整物理文件名                
                    string serverFileName = toFileFullPath + fileName;

                    //获取保存的excel路径
                    this.fuDocument.SaveAs(serverFileName);

                    if (File.Exists(serverFileName))
                    {
                        DataTable table = new DataTable();

                        if (fileNameExt == ".xlsx")
                        {
                            table = ExcelHelper.ImportExcelxtoDt(serverFileName, 0, 1); //导入excel2007
                        }
                        else
                        {
                            table = ExcelHelper.ImportExceltoDt(serverFileName, 0, 1);//导入excel2003
                        }
                        //清空匹配表
                        //DbHelperOra.ExecuteSql("DELETE FROM dat_sl_imp WHERE LRY = '" + UserAction.UserID + "'");
                        if (table != null && table.Rows.Count > 0)
                        {
                            string sql = @"INSERT INTO DAT_SL_IMP(SEQNO,rowno,LRRQ,FLAG,LRY,DEPTOUT,DEPTOUTNAME,DEPTID,DEPTNAME,XSRQ,CATID,GDSEQ,BARCODE,GDNAME,UNIT,
                                                 GDSPEC,GDMODE,HWID,BZHL,BZSL,DHSL,HSJJ,HSJE,PH,PZWH,PRODUCER,RQ_SC,YXQZ)
                                        VALUES(:SEQNO,:rowno,:LRRQ,:FLAG,:LRY,:DEPTOUT,:DEPTOUTNAME,:DEPTID,:DEPTNAME,:XSRQ,:CATID,:GDSEQ,:BARCODE,
                                 :GDNAME,:UNIT,:GDSPEC,:GDMODE,:HWID,:BZHL,:BZSL,:DHSL,:HSJJ,:HSJE,:PH,:PZWH,:PRODUCER,:RQ_SC,:YXQZ)";

                            OracleConnection con = new OracleConnection(DbHelperOra.connectionString);
                            OracleDataAdapter da = new OracleDataAdapter(sql, con);
                           
                            //在批量添加数据前的准备工作
                            da.InsertCommand = new OracleCommand(sql, con);
                            con.Open();
                            
                            OracleTransaction t = null;  
                            t=con.BeginTransaction();
                            da.InsertCommand.Transaction = t;
                            OracleParameter param = new OracleParameter();

                            OracleParameter para4 = new OracleParameter("SEQNO", OracleDbType.Varchar2);
                            string aa = "select SEQ_SL_IMP.NEXTVAL FROM DUAL";
                            string str = DbHelperOra.GetSingle(aa).ToString();
                            para4.Value = str;
                            param = da.InsertCommand.Parameters.Add(para4);

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("ROWNO", OracleDbType.Varchar2, 80));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "行号";

                            OracleParameter para2 = new OracleParameter("LRRQ", OracleDbType.Date);
                            para2.Value = System.DateTime.Now;
                            param = da.InsertCommand.Parameters.Add(para2);

                            OracleParameter para1 = new OracleParameter("FLAG", OracleDbType.Char);
                            para1.Value = 'N';
                            param = da.InsertCommand.Parameters.Add(para1);

                            OracleParameter para = new OracleParameter("LRY", OracleDbType.Varchar2, 20);
                            para.Value = UserAction.UserID;
                            param = da.InsertCommand.Parameters.Add(para);

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("DEPTOUT", OracleDbType.Varchar2, 80));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "出库库房编号";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("DEPTOUTNAME", OracleDbType.Varchar2, 100));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "出库库房";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("DEPTID", OracleDbType.Varchar2, 80));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "申领科室编号";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("DEPTNAME", OracleDbType.Varchar2, 100));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "申领科室";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("XSRQ", OracleDbType.Varchar2, 40));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "申领日期";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("CATID", OracleDbType.Varchar2, 100));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "商品类别";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("GDSEQ", OracleDbType.Varchar2, 20));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "商品编码";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("BARCODE", OracleDbType.Varchar2, 100));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "条码";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("GDNAME", OracleDbType.Varchar2, 300));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "商品名称";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("UNIT", OracleDbType.Varchar2, 15));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "单位";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("GDSPEC", OracleDbType.Varchar2, 200));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "商品规格";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("GDMODE", OracleDbType.Varchar2, 80));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "型号";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("HWID", OracleDbType.Varchar2, 80));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "货位编号";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("BZHL", OracleDbType.Decimal));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "包装含量";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("BZSL", OracleDbType.Decimal));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "包装数";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("DHSL", OracleDbType.Decimal));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "订货数";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("HSJJ", OracleDbType.Decimal));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "含税进价";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("HSJE", OracleDbType.Decimal));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "含税金额";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("PH", OracleDbType.Varchar2, 40));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "批号";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("PZWH", OracleDbType.Varchar2, 100));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "批准文号";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("PRODUCER", OracleDbType.Varchar2, 60));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "生产商";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("RQ_SC", OracleDbType.Varchar2, 40));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "生产日期";

                            param = da.InsertCommand.Parameters.Add(new OracleParameter("YXQZ", OracleDbType.Varchar2, 40));
                            param.SourceVersion = DataRowVersion.Current;
                            param.SourceColumn = "有效期至";



                          
                            //批量添加数据
                            try
                            {
                                da.Update(table);
                                //处理导入数据的准确性
                                OracleParameter[] parameters = new OracleParameter[]
                                {
                                     new OracleParameter("V_USER",OracleDbType.Varchar2),
                                     new OracleParameter("V_OPER",OracleDbType.Varchar2),
                                     new OracleParameter("V_SEQNO",OracleDbType.Varchar2),
                                };
                                parameters[0].Value = UserAction.UserID;
                                parameters[1].Value = "CHECK";
                                parameters[2].Value = str;

                                hfdseqno.Text = str;

                                OracleCommand cmd = new OracleCommand("P_SL_IMPORT",con);
                                cmd.CommandType= CommandType.StoredProcedure;
                                cmd.Transaction = t;
                                cmd.Parameters.AddRange(parameters);
                                cmd.ExecuteNonQuery();
                                t.Commit();
                                bind();
                            }
                            catch (Exception ex)
                            {
                                t.Rollback();
                                fuDocument.Reset();
                                Alert.Show("数据库错误：" + Error_Parse(ex.Message.ToString()), "异常信息", MessageBoxIcon.Warning);
                            }
                            finally
                            {
                                con.Close();
                            }
                        }
                        File.Delete(serverFileName);
                    }
                }
            }
            else
            {
                Alert.Show("请选择excel文件！");
            }
            #endregion
        }


        public string Error_Parse(string error)
        {
            string value = string.Empty;
            if (error.IndexOf("ORA-") > -1)
            {
                value = error.Replace("\n", "").Substring(error.IndexOf("ORA-") + 10);
                if (value.IndexOf("ORA-") > -1)
                {
                    value = value.Substring(0, value.IndexOf("ORA-"));
                }
            }
            else
            {
                value = error;
            }

            return value;
        }

        private bool CheckFileExt(string fileNameExt)
        {
            if (String.IsNullOrEmpty(fileNameExt))
            {
                return false;
            }
            else
            {
                return true;
            }
        }
        protected void bind()
        {
            String Sql = @" SELECT f_getdeptname(A.deptout) deptout,
                            f_getdeptname(A.deptoutname) deptoutname,
                            A.deptid,
                            A.deptname,
                            A.catid,
                            A.xsrq,
                            A.gdseq,
                            A.barcode,
                            NVL(B.HISNAME, B.GDNAME) GDNAME,
                            f_getunitname(B.UNIT) UNIT,
                            A.gdspec,
                            A.gdmode,
                            A.hwid,
                            A.dhsl,
                            A.ph,
                            A.pzwh,
                            A.rq_sc,
                            A.yxqz
                        FROM DAT_SL_IMP A, DOC_GOODS B
                        WHERE A.GDSEQ = B.GDSEQ(+)
                        AND A.LRY = '{0}' and a.flag='N'";
            int total = 0;
            GridStock.DataSource = DbHelperOra.Query(String.Format(Sql, UserAction.UserID)).Tables[0];
            DataTable dtData = PubFunc.DbGetPage(GridStock.PageIndex, GridStock.PageSize, String.Format(Sql, UserAction.UserID), ref total);
            GridStock.RecordCount = total;
            GridStock.DataSource = dtData;
            GridStock.DataBind();
            if (dtData.Rows.Count > 0)
            {
                btnSave.Enabled = true;
            }
            else
            {
                btnSave.Enabled = false;
            }
        }

        protected void GridStock_PageIndexChange(object sender, GridPageEventArgs e)
        {
            GridStock.PageIndex = e.NewPageIndex;
            bind();
        }

        protected void Grid_SL_PageIndexChange(object sender, GridPageEventArgs e)
        {

        }
    }
}