//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18444 版自动生成。
// 
#pragma warning disable 1591

namespace SPDProject.Platform {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PlatformWebServiceSoap", Namespace="http://localhost:3787/")]
    public partial class PlatformWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommonApiOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommonBillApiOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommonExecApiOperationCompleted;
        
        private System.Threading.SendOrPostCallback BulkExecApiOperationCompleted;
        
        private System.Threading.SendOrPostCallback BulkExecBillApiOperationCompleted;
        
        private System.Threading.SendOrPostCallback CertPicUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBillStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBillStatusXDDOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBillStatusCDDOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuerySupBillApiOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PlatformWebService() {
            this.Url = global::SPDProject.Properties.Settings.Default.SPDProject_Platform_PlatformWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;
        
        /// <remarks/>
        public event CommonApiCompletedEventHandler CommonApiCompleted;
        
        /// <remarks/>
        public event CommonBillApiCompletedEventHandler CommonBillApiCompleted;
        
        /// <remarks/>
        public event CommonExecApiCompletedEventHandler CommonExecApiCompleted;
        
        /// <remarks/>
        public event BulkExecApiCompletedEventHandler BulkExecApiCompleted;
        
        /// <remarks/>
        public event BulkExecBillApiCompletedEventHandler BulkExecBillApiCompleted;
        
        /// <remarks/>
        public event CertPicUploadCompletedEventHandler CertPicUploadCompleted;
        
        /// <remarks/>
        public event QueryBillStatusCompletedEventHandler QueryBillStatusCompleted;
        
        /// <remarks/>
        public event QueryBillStatusXDDCompletedEventHandler QueryBillStatusXDDCompleted;
        
        /// <remarks/>
        public event QueryBillStatusCDDCompletedEventHandler QueryBillStatusCDDCompleted;
        
        /// <remarks/>
        public event QuerySupBillApiCompletedEventHandler QuerySupBillApiCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:3787/Login", RequestNamespace="http://localhost:3787/", ResponseNamespace="http://localhost:3787/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string username, string password, string token) {
            object[] results = this.Invoke("Login", new object[] {
                        username,
                        password,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password, string token) {
            this.LoginAsync(username, password, token, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password, string token, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        username,
                        password,
                        token}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:3787/Logout", RequestNamespace="http://localhost:3787/", ResponseNamespace="http://localhost:3787/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Logout(string username, string password, string token) {
            object[] results = this.Invoke("Logout", new object[] {
                        username,
                        password,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LogoutAsync(string username, string password, string token) {
            this.LogoutAsync(username, password, token, null);
        }
        
        /// <remarks/>
        public void LogoutAsync(string username, string password, string token, object userState) {
            if ((this.LogoutOperationCompleted == null)) {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[] {
                        username,
                        password,
                        token}, this.LogoutOperationCompleted, userState);
        }
        
        private void OnLogoutOperationCompleted(object arg) {
            if ((this.LogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new LogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:3787/CommonApi", RequestNamespace="http://localhost:3787/", ResponseNamespace="http://localhost:3787/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CommonApi(string key, string[] paramArray) {
            object[] results = this.Invoke("CommonApi", new object[] {
                        key,
                        paramArray});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CommonApiAsync(string key, string[] paramArray) {
            this.CommonApiAsync(key, paramArray, null);
        }
        
        /// <remarks/>
        public void CommonApiAsync(string key, string[] paramArray, object userState) {
            if ((this.CommonApiOperationCompleted == null)) {
                this.CommonApiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommonApiOperationCompleted);
            }
            this.InvokeAsync("CommonApi", new object[] {
                        key,
                        paramArray}, this.CommonApiOperationCompleted, userState);
        }
        
        private void OnCommonApiOperationCompleted(object arg) {
            if ((this.CommonApiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommonApiCompleted(this, new CommonApiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:3787/CommonBillApi", RequestNamespace="http://localhost:3787/", ResponseNamespace="http://localhost:3787/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CommonBillApi(string key, string[] paramArray) {
            object[] results = this.Invoke("CommonBillApi", new object[] {
                        key,
                        paramArray});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CommonBillApiAsync(string key, string[] paramArray) {
            this.CommonBillApiAsync(key, paramArray, null);
        }
        
        /// <remarks/>
        public void CommonBillApiAsync(string key, string[] paramArray, object userState) {
            if ((this.CommonBillApiOperationCompleted == null)) {
                this.CommonBillApiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommonBillApiOperationCompleted);
            }
            this.InvokeAsync("CommonBillApi", new object[] {
                        key,
                        paramArray}, this.CommonBillApiOperationCompleted, userState);
        }
        
        private void OnCommonBillApiOperationCompleted(object arg) {
            if ((this.CommonBillApiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommonBillApiCompleted(this, new CommonBillApiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:3787/CommonExecApi", RequestNamespace="http://localhost:3787/", ResponseNamespace="http://localhost:3787/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CommonExecApi(string key, string[] paramArray) {
            object[] results = this.Invoke("CommonExecApi", new object[] {
                        key,
                        paramArray});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CommonExecApiAsync(string key, string[] paramArray) {
            this.CommonExecApiAsync(key, paramArray, null);
        }
        
        /// <remarks/>
        public void CommonExecApiAsync(string key, string[] paramArray, object userState) {
            if ((this.CommonExecApiOperationCompleted == null)) {
                this.CommonExecApiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommonExecApiOperationCompleted);
            }
            this.InvokeAsync("CommonExecApi", new object[] {
                        key,
                        paramArray}, this.CommonExecApiOperationCompleted, userState);
        }
        
        private void OnCommonExecApiOperationCompleted(object arg) {
            if ((this.CommonExecApiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommonExecApiCompleted(this, new CommonExecApiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:3787/BulkExecApi", RequestNamespace="http://localhost:3787/", ResponseNamespace="http://localhost:3787/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BulkExecApi(string key, string[] paramArray) {
            object[] results = this.Invoke("BulkExecApi", new object[] {
                        key,
                        paramArray});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BulkExecApiAsync(string key, string[] paramArray) {
            this.BulkExecApiAsync(key, paramArray, null);
        }
        
        /// <remarks/>
        public void BulkExecApiAsync(string key, string[] paramArray, object userState) {
            if ((this.BulkExecApiOperationCompleted == null)) {
                this.BulkExecApiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBulkExecApiOperationCompleted);
            }
            this.InvokeAsync("BulkExecApi", new object[] {
                        key,
                        paramArray}, this.BulkExecApiOperationCompleted, userState);
        }
        
        private void OnBulkExecApiOperationCompleted(object arg) {
            if ((this.BulkExecApiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BulkExecApiCompleted(this, new BulkExecApiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:3787/BulkExecBillApi", RequestNamespace="http://localhost:3787/", ResponseNamespace="http://localhost:3787/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BulkExecBillApi(string key, string[] paramArray) {
            object[] results = this.Invoke("BulkExecBillApi", new object[] {
                        key,
                        paramArray});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BulkExecBillApiAsync(string key, string[] paramArray) {
            this.BulkExecBillApiAsync(key, paramArray, null);
        }
        
        /// <remarks/>
        public void BulkExecBillApiAsync(string key, string[] paramArray, object userState) {
            if ((this.BulkExecBillApiOperationCompleted == null)) {
                this.BulkExecBillApiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBulkExecBillApiOperationCompleted);
            }
            this.InvokeAsync("BulkExecBillApi", new object[] {
                        key,
                        paramArray}, this.BulkExecBillApiOperationCompleted, userState);
        }
        
        private void OnBulkExecBillApiOperationCompleted(object arg) {
            if ((this.BulkExecBillApiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BulkExecBillApiCompleted(this, new BulkExecBillApiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:3787/CertPicUpload", RequestNamespace="http://localhost:3787/", ResponseNamespace="http://localhost:3787/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CertPicUpload(string key, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bytes, string[] paramArray) {
            object[] results = this.Invoke("CertPicUpload", new object[] {
                        key,
                        bytes,
                        paramArray});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CertPicUploadAsync(string key, byte[] bytes, string[] paramArray) {
            this.CertPicUploadAsync(key, bytes, paramArray, null);
        }
        
        /// <remarks/>
        public void CertPicUploadAsync(string key, byte[] bytes, string[] paramArray, object userState) {
            if ((this.CertPicUploadOperationCompleted == null)) {
                this.CertPicUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCertPicUploadOperationCompleted);
            }
            this.InvokeAsync("CertPicUpload", new object[] {
                        key,
                        bytes,
                        paramArray}, this.CertPicUploadOperationCompleted, userState);
        }
        
        private void OnCertPicUploadOperationCompleted(object arg) {
            if ((this.CertPicUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CertPicUploadCompleted(this, new CertPicUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:3787/QueryBillStatus", RequestNamespace="http://localhost:3787/", ResponseNamespace="http://localhost:3787/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryBillStatus(string billno, string custid, string username, string uuid) {
            object[] results = this.Invoke("QueryBillStatus", new object[] {
                        billno,
                        custid,
                        username,
                        uuid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBillStatusAsync(string billno, string custid, string username, string uuid) {
            this.QueryBillStatusAsync(billno, custid, username, uuid, null);
        }
        
        /// <remarks/>
        public void QueryBillStatusAsync(string billno, string custid, string username, string uuid, object userState) {
            if ((this.QueryBillStatusOperationCompleted == null)) {
                this.QueryBillStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBillStatusOperationCompleted);
            }
            this.InvokeAsync("QueryBillStatus", new object[] {
                        billno,
                        custid,
                        username,
                        uuid}, this.QueryBillStatusOperationCompleted, userState);
        }
        
        private void OnQueryBillStatusOperationCompleted(object arg) {
            if ((this.QueryBillStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBillStatusCompleted(this, new QueryBillStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:3787/QueryBillStatusXDD", RequestNamespace="http://localhost:3787/", ResponseNamespace="http://localhost:3787/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryBillStatusXDD(string billno, string custid, string username, string uuid) {
            object[] results = this.Invoke("QueryBillStatusXDD", new object[] {
                        billno,
                        custid,
                        username,
                        uuid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBillStatusXDDAsync(string billno, string custid, string username, string uuid) {
            this.QueryBillStatusXDDAsync(billno, custid, username, uuid, null);
        }
        
        /// <remarks/>
        public void QueryBillStatusXDDAsync(string billno, string custid, string username, string uuid, object userState) {
            if ((this.QueryBillStatusXDDOperationCompleted == null)) {
                this.QueryBillStatusXDDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBillStatusXDDOperationCompleted);
            }
            this.InvokeAsync("QueryBillStatusXDD", new object[] {
                        billno,
                        custid,
                        username,
                        uuid}, this.QueryBillStatusXDDOperationCompleted, userState);
        }
        
        private void OnQueryBillStatusXDDOperationCompleted(object arg) {
            if ((this.QueryBillStatusXDDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBillStatusXDDCompleted(this, new QueryBillStatusXDDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:3787/QueryBillStatusCDD", RequestNamespace="http://localhost:3787/", ResponseNamespace="http://localhost:3787/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryBillStatusCDD(string billno, string custid, string warehouse, string username, string uuid) {
            object[] results = this.Invoke("QueryBillStatusCDD", new object[] {
                        billno,
                        custid,
                        warehouse,
                        username,
                        uuid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBillStatusCDDAsync(string billno, string custid, string warehouse, string username, string uuid) {
            this.QueryBillStatusCDDAsync(billno, custid, warehouse, username, uuid, null);
        }
        
        /// <remarks/>
        public void QueryBillStatusCDDAsync(string billno, string custid, string warehouse, string username, string uuid, object userState) {
            if ((this.QueryBillStatusCDDOperationCompleted == null)) {
                this.QueryBillStatusCDDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBillStatusCDDOperationCompleted);
            }
            this.InvokeAsync("QueryBillStatusCDD", new object[] {
                        billno,
                        custid,
                        warehouse,
                        username,
                        uuid}, this.QueryBillStatusCDDOperationCompleted, userState);
        }
        
        private void OnQueryBillStatusCDDOperationCompleted(object arg) {
            if ((this.QueryBillStatusCDDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBillStatusCDDCompleted(this, new QueryBillStatusCDDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:3787/QuerySupBillApi", RequestNamespace="http://localhost:3787/", ResponseNamespace="http://localhost:3787/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QuerySupBillApi(string key, string[] paramArray) {
            object[] results = this.Invoke("QuerySupBillApi", new object[] {
                        key,
                        paramArray});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QuerySupBillApiAsync(string key, string[] paramArray) {
            this.QuerySupBillApiAsync(key, paramArray, null);
        }
        
        /// <remarks/>
        public void QuerySupBillApiAsync(string key, string[] paramArray, object userState) {
            if ((this.QuerySupBillApiOperationCompleted == null)) {
                this.QuerySupBillApiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerySupBillApiOperationCompleted);
            }
            this.InvokeAsync("QuerySupBillApi", new object[] {
                        key,
                        paramArray}, this.QuerySupBillApiOperationCompleted, userState);
        }
        
        private void OnQuerySupBillApiOperationCompleted(object arg) {
            if ((this.QuerySupBillApiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerySupBillApiCompleted(this, new QuerySupBillApiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void LogoutCompletedEventHandler(object sender, LogoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CommonApiCompletedEventHandler(object sender, CommonApiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommonApiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommonApiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CommonBillApiCompletedEventHandler(object sender, CommonBillApiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommonBillApiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommonBillApiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CommonExecApiCompletedEventHandler(object sender, CommonExecApiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommonExecApiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommonExecApiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void BulkExecApiCompletedEventHandler(object sender, BulkExecApiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BulkExecApiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BulkExecApiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void BulkExecBillApiCompletedEventHandler(object sender, BulkExecBillApiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BulkExecBillApiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BulkExecBillApiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CertPicUploadCompletedEventHandler(object sender, CertPicUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CertPicUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CertPicUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void QueryBillStatusCompletedEventHandler(object sender, QueryBillStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBillStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBillStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void QueryBillStatusXDDCompletedEventHandler(object sender, QueryBillStatusXDDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBillStatusXDDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBillStatusXDDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void QueryBillStatusCDDCompletedEventHandler(object sender, QueryBillStatusCDDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBillStatusCDDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBillStatusCDDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void QuerySupBillApiCompletedEventHandler(object sender, QuerySupBillApiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerySupBillApiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuerySupBillApiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591