本项目命名空间:
	WebErp.AppCode
	WebErp.AppFrame
------------------------------------------------------
	MyTable mt_dept = new MyTable("SYS_DEPT","CODE");  --MyTable 使用
	mt_dept.ColRow["CODE"]      = tbxDeptCode.Text;
	mt_dept.ColRow["NAME"]      = tbxDeptName.Text;
	mt_dept.ColRow["MANAGER"]   = ddlManager.SelectedValue;
	mt_dept.ColRow["PARENT"]    = ddlParentDept.SelectedValue;
	mt_dept.ColRow["FLAG"]      = cbxFlag.Checked ? "Y" : "N";
	mt_dept.ColRow["MEMO"]      = tbxDeptCode.Text;

	List<CommandInfo> cmdList = new List<CommandInfo>();
	if (strDeptid == tbxDeptCode.Text)  //如果非新增，则删除原功能定义
	{
		cmdList.Add(mt_dept.Delete(""));
	}
	else if (mt_dept.Exists(""))
	{
		FineUI.Alert.Show("部门编码【" + mt_dept.ColRow["CODE"]  + "】已存在，不能新增！");
		return false;
	}
	cmdList.Add(mt_dept.Insert());

	DbHelperOra.ExecuteSqlTran(cmdList);
	return true;
------------------------------------------------------
insert into sys_report(seqno,type,name,flag,selectsql) --批量生成下拉列表。
SELECT 'DDL_'||code,'DDLLIST',NAME,'Y',
'select  CODE,NAME from
( 
	SELECT  '''' CODE,''--请选择--'' NAME   FROM dual
	union all
	SELECT CODE,NAME FROM SYS_CODEVALUE WHERE FLAG='''||'Y'||''' AND TYPE='''||CODE||''''||
') ORDER BY NAME '
from sys_codetype where 'DDL_'||code not in (select seqno from sys_report where type='DDLLIST' );

PubFunc.DdlDataGet(ddlDept, "DDL_DEPT");--快速绑定DropDownList
DatePicker1.SelectedDate = DateTime.Now;--设置日期选择为当天
------------------------------------------------------
	--取、设置模版对象
	System.Web.UI.WebControls.TextBox tbxGroupName = (System.Web.UI.WebControls.TextBox)gr.FindControl("tbxGroupName");
------------------------------------------------------常用图标
	Icon="magnifier" Text="查询"
	Icon="ReportEdit" Text="清 除"    
		Icon="PageEdit" Text="编辑" 
		Icon="Add" Text="增加" 
		Icon="Delete" Text="删 除"  
		Icon="BulletPlus" Text="增行" 
		Icon="BulletMinus" Text="删行" 	 
		Icon="Disk" Text="保存"
		Icon="Accept"  Text="确定" /审核  Tick
		Icon="Cancel " Text="取消"  
	Icon="Printer" Text="打印" 
	Icon="DatabaseGo"  Text="导出"
	Icon="BulletCross" Text="关闭"  Cross  
		Icon="Key" Text="密码"    
		Icon="SystemSaveClose" Text="保存后关闭" 
		Icon="BookOpen" Text="查看" 
		Icon="CartEdit" Text="结帐"   
		ApplicationViewTile  --颜色选择
	Table			--表格
	Page			--单表
	Cut				--剪切
	PageCopy		--复制
	Email/EmailEdit --邮件
	Wrench			--工具、配置
	Folder			--文件夹
	MoneyYen		--人民币 
    <x:Button ID="btnAdd" CssStyle="margin-left: 15px;" Icon="Add" Text="新 增" EnablePostBack="true" runat="server" OnClick="btnAdd_Click" />
    <x:Button ID="btnDel" CssStyle="margin-left: 15px;" Icon="Delete" Text="删 除" EnablePostBack="true" runat="server" OnClick="btnDel_Click" />
    <x:Button ID="btnAddRow" CssStyle="margin-left: 15px;" Icon="BulletPlus" Text="新 行" EnablePostBack="true" runat="server" OnClick="btnAddRow_Click" />
    <x:Button ID="btnDelRow" CssStyle="margin-left: 15px;" Icon="BulletMinus" Text="删 行" EnablePostBack="true" runat="server" OnClick="btnDelRow_Click" />
    <x:Button ID="btnSave" CssStyle="margin-left: 15px;" Icon="Disk" Text="保 存" EnablePostBack="true" runat="server" OnClick="btnSave_Click" ValidateForms="FormDoc" />
    <x:Button ID="btnAudit" CssStyle="margin-left: 15px;" Icon="Accept" Text="审 核" EnablePostBack="true" runat="server" OnClick="btnAudit_Click" />
    <x:Button ID="btnPrint" CssStyle="margin-left: 15px;" Icon="Printer" Text="打 印" EnablePostBack="true" runat="server" OnClick="btnPrint_Click" /> 
------------------------------------------------------FineUI对象
FineUI对象：DropDownList/TriggerBox/RadioButtonList/CheckBoxList/TextBox/NumberBox/DatePicker/Button
			   ToolbarText /ToolbarFill/ToolbarSeparator/ 
FineUI事件：OnClick /OnRowCommand CommandName="Modify"/OnRowClick/OnRowDataBound//////
------------------------------------------------------
context.Server.MapPath("~/App_Data/") + file2.FileName 

WEB_REPORT 

Replace("<BR />", "\n").Replace("&nbsp;&nbsp", "\t"); //到areatext
Replace("\n", "<BR />").Replace("\t", "&nbsp;&nbsp"); //到grid

Request.Form[ string.Format("Grid1_{0}$txtName", i)];

 
DateFormatString="yyyy-MM-dd" 
CssStyle="margin-left: 5px;" 
 .x-grid3-td-ct1
        {
            text-align: center;
            vertical-align: middle;
        }
---------------------
A.UserStatusDay.aspx  
	--1.定义查询条件区conddiv
	--2.定义查询buttion --btselect
	--3.定义数据显示区divResultList_inner
B.UserStatusDay.js  --调用Replrt.ReportSearch.cs得到数据填入divResultList_inner
	--0.为查询按钮绑定查询事件
		--1.查询事件--得到条件数据
		--2.查询事件--检查条件数据
		--3.查询事件--调用后台CS得到数据 btnQuery_Click
		--4.查询事件--调将数据填入divResultList_inner
C.Replrt.ReportSearch.cs  --得到数据  --不采用Controls下.ascx格式化数据

--SYS_BUSINESSDATA_SCHPLAN  业务数据检索方案
刷新、打印、导出、SQL
--记录报表刷新用时，DateTime.Now.ToString();
  
根据查询参数个数计算行数，如果中有一行，则行上空为20

------------------------------------------------------------------------------------------------------------------	
BoundField	
	ExpandUnusedSpace="True" 	--铺满表格列
	genderColumn.Hidden = !genderColumn.Hidden;--显示隐藏列   
	AutoSizePanelID 占据整个页面的面板属性  <x:PageManager ID="PageManager1" AutoSizePanelID="Grid1" runat="server" />
	AjaxAspnetControls如果想让某个ASP.NET在页面回发时也更新，多个控件ID以逗号分隔， <x:PageManager ID="PageManager1" AjaxAspnetControls="aspbox,aspbutton" runat="server" />
	如果希望在客户端通过JavaScript代码来处理按钮的点击事件，需要设置EnablePostBack和OnClientClick两个属性，典型的代码如下所示：
	<x:Button ID="btnClientClick" Text="客户端事件" OnClientClick="alert('这是客户端事件');" EnablePostBack="false" runat="server"/> 
	<x:PageManager ID="PageManager1" AjaxAspnetControls="Label1,Literal1" runat="server" />  AjaxAspnetControls属性让ASP.NET控件也参与FineUI的AJAX回发 - 

有时，我们希望在服务器端通过C#代码注册客户端的事件脚本，典型代码如下所示：
 <x:Button ID="btnClientClick2" Text="服务器端生成的客户端事件" EnablePostBack="false" runat="server">
</x:Button>   
protected void Page_Load(object sender, EventArgs e)
{
    if (!IsPostBack)
    {
        btnClientClick2.OnClientClick = Alert.GetShowInTopReference("这是在服务器端生成的客户端事件");
    }
}  
5. TextBox等里面的Label靠右：<style type="text/css">.x-form-item label { text-align: right; } </style>
6. 尽量用FineUI.PageContext.Redirect、FineUI.PageContext.Refresh，内部都是转成js代码。
7. 页面内有原版控件，需要在PageManager加AjaxAspnetControls="控件ID"，否则不能互动。 

如果需要验证多个表单，只需要将这些表单的ID以逗号分隔的形式设置到ValidateForms属性即可。可以查看这个示例页面。
 <x:Button ID="btnSubmitAll" Text="验证两个表单并提交" runat="server" OnClick="btnSubmitAll_Click" ValidateForms="extForm1,extForm2" />

如果我们希望在点击按钮的时候首先弹出确认对话框（类似于JavaScript的window.confirm），在征得用户的同意后再触发按钮的默认行为，该怎么办？
FineUI也考虑到了这种需求，特意提供了如下几个属性：ConfirmText/ConfirmTitle/ConfirmIcon/ConfirmTarget 
FineUI.Confirm(.....); 


页面级别的参数配置
 •Theme: 控件主题，目前支持三种主题风格（blue/gray/access，默认值：blue）
 •Language: 控件语言（en/zh_CN/zh_TW/...，默认值：zh_CN）
 •FormMessageTarget: 表单字段错误提示信息的显示位置（side/qtip，默认值：side）
 •FormOffsetRight: 表单字段右侧距离边界的宽度（默认值：20px）
 •FormLabelWidth: 表单字段标签的宽度（默认值：100px）
 •FormLabelSeparator: 表单字段标签与内容的分隔符（默认值："："）
 •EnableAjax: 是否启用AJAX（默认值：true）
 •AjaxTimeout: AJAX超时时间（单位：秒，默认值：60s）
 •EnableBigFont: 是否启用大字体，将ExtJS默认11px的字体全部改为12px，否则显示的中文字体太小（默认值：false）
  •DebugMode: 是否开发模式，启用时格式化输出页面JavaScript代码，便于调试（默认值：false）

上面这些参数和Web.config中的一样，只不过作用域在页面范围内，覆盖Web.config中的同名配置。
还有一些其他配置属性：
 •EnablePageLoading：是否启用页面第一次加载提示，默认为居中显示的加载图标（默认值：true）
 •EnableAjaxLoading：是否启用AJAX加载提示，默认为位于页面上方的文字提示（默认值：true）
 •ExecuteOnReadyWhenPostBack：是否在每次页面回发时都执行onReady脚本（默认值：true）
  
  <x:DatePicker ID="DatePicker1" Label="日期选择器" Required="true" runat="server"/> 
-------------------------------DDLLIST
  FineUI.DropDownList ddlSex = new DropDownList(); 
  ddlSex.ID = "ddlSex"; 
  ddlSex.Label = "Sex (AutoPostBack)"; 
  //ddlSex.CompareValue = "-1"; 
  //ddlSex.CompareOperator = Operator.NotEqual; 
  //ddlSex.CompareMessage = "请选择性别！"; 
  //ddlSex.Items.Add("--请选择--", "-1");
 
 
  ddlSex.Items.Add("boy", "0"); 
  ddlSex.Items.Add("girl", "1"); 
  ddlSex.SelectedIndex = 0;  
  row.Items.Add(ddlSex); 
  ddlSex.AutoPostBack = true; 
  ddlSex.SelectedIndexChanged += new EventHandler(ddlSex_SelectedIndexChanged);

        private void BindDataTableToDropDownList()
        {
            DropDownList1.DataTextField = "MyText";
            DropDownList1.DataValueField = "MyValue";
            DropDownList1.DataSource = table;
            DropDownList1.DataBind();
        }
-------------------------------DDLLIST
如果希望在客户端通过JavaScript代码来处理按钮的点击事件，需要设置EnablePostBack和OnClientClick两个属性，典型的代码如下所示：
 <x:Button ID="btnClientClick" Text="客户端事件" OnClientClick="alert('这是客户端事件');" EnablePostBack="false" runat="server">
</x:Button> 
有时，我们希望在服务器端通过C#代码注册客户端的事件脚本，典型代码如下所示：
 <x:Button ID="btnClientClick2" Text="服务器端生成的客户端事件" EnablePostBack="false" runat="server">
</x:Button>   

FineUI.Confirm.Show("sssssssssssssssssss",FineUI.MessageBoxIcon.Warning);

protected void Page_Load(object sender, EventArgs e)
{
    if (!IsPostBack)
    {
        btnClientClick2.OnClientClick = Alert.GetShowInTopReference("这是在服务器端生成的客户端事件");
    }
}
 grid 全屏，不分页！
 <x:Grid ID="Grid1"  runat="server" AnchorValue="100% -45px" ShowBorder="False" ShowHeader="false"  DataKeyNames="funcid,funcname"    
                        EnableCheckBoxSelect="true" EnableRowNumber="true" AllowSorting="true" AllowPaging="true"  PageSize="19"
                        IsDatabasePaging="true" OnPageIndexChange="Grid1_PageIndexChange" OnSort="Grid1_Sort">
--动态的往Grid里面添加列                        
FineUI.BoundField bf = new FineUI.BoundField();
bf.HeaderText = headtexts[i];
bf.DataField = cols[i];
bf.DataTooltipField = cols[i];
bf.ColumnId = cols[i];
Grid1.Columns.Add(bf);                     

<x:HyperLinkField HeaderText="操作" DataTooltipField="Major" DataTextField="Major"
                DataTextFormatString="{0}" DataNavigateUrlFields="Major" DataNavigateUrlFormatString=" http://www.baidu.com?Url={0}" DataNavigateUrlFieldsEncode="true"
                Target="_blank" ExpandUnusedSpace="True" />
                  
 if (!IsPostBack)
            {
                BindDDL();
                btnColse.OnClientClick = FineUI.ActiveWindow.GetConfirmHidePostBackReference();
                XW_DEMO.Visible = true;
               // XW_DEMO.InnerHtml = cmsnr.XwDemo;
                string[] s = { "XW_DEMO" };
                PageManager1.AjaxAspnetControls = s;
            }
//后台打开子窗口    
ReportBmp.Hidden = false;
FineUI.PageContext.RegisterStartupScript(ReportBmp.GetShowReference("~/AppFrame/WebReportAbc.aspx?REPID=" + strRepid, "ABC分析"));

string　showSourceScript　=　"(function() {getMainWindow().loadJS('data/source/"　+　fileName　+　"');}).defer(100);";
FineUI.PageContext.RegisterStartupScript(showSourceScript);
执行增删改查操作后
	FineUI.PageContext.RegisterStartupScript("parent.window.location.href=parent.window.location.href;");
	PageContext.RegisterStartupScript(Alert.GetShowReference("添加成功") + ActiveWindow.GetClosePostBackReference());
新选项卡中打开窗口:将来用于平板 IconAlign="Top" Size="Large"
FineUI.PageContext.RegisterStartupScript(" window.open('login.aspx', '_blank');");
<x:Button ID="btnIcon3" Text="图标在上面" IconAlign="Top" Icon="Report" runat="server"  CssClass="inline" />


2. 正则表达式
 •Regex（字符串）：必须满足的正则表达式
 •RegexMessage（字符串）：不满足正则表达式时提示信息
 •RegexPattern（枚举）：正则表达式常用类型
 •RegexPattern.NUMBER：数字
 •RegexPattern.ALPHA：大写和小写字母
 •RegexPattern.ALPHA_NUMERIC：字母和数字
 •RegexPattern.ALPHA_UNDERLINE：字母和下划线
 •RegexPattern.ALPHA_NUMERIC_UNDERLINE：字母数字和下划线
 •RegexPattern.ALPHA_LOWER_CASE：小写字母
 •RegexPattern.ALPHA_UPPER_CASE：大写字母
 •RegexPattern.EMAIL：电子邮箱
 •RegexPattern.URL：网址
 •RegexPattern.POSTAL_CODE：邮政编码
 •RegexPattern.IP_ADDRESS：IP地址
 •RegexPattern.IDENTITY_CARD：身份证号（不错吧，还有国内的18位身份证号）
 
其中RegexPattern非常有用，内置了很多我们经常用到的正则表达式。


阻止别人在Iframe中加载你的页面
 如果你的网站变得非常有人气的时候，就有很多网站想链接到你的网站，甚至想把你的网页通过IFrame嵌入它自己的网页。 
这样就不好玩了，那么如何来阻止这样行为呢？ 

if(top !== window) { top.location.href = window.location.href;} 


protected void Grid1_RowDataBound(object sender, GridRowEventArgs e)
     { 
         string style = String.Empty;
         if (infoPurBill.Status == 4)
         { 
             style = "color:Red;";
         }
         else if (infoPurBill.Status == 5 || infoPurBill.Status == 8)
         {
             //style = "background:#FF0000;";
             style = "color:Blue;";
         } 
         else
         { 
             style = "color:black;";
         }

        for (int i = 0; i < e.Values.Length; i++)
         {
             if (!Grid1.Columns[i].Hidden && Grid1.Columns[i].ToString() == "FineUI.BoundField")
             {
                 e.Values[i] = String.Format("<span style=\"{0}\">{1}</span>", style, e.Values[i]);
             }
         } 
     }
     
用这样的代码可以批量删除        
if (Grid2.SelectedRowIndexArray != null && Grid2.SelectedRowIndexArray.Length > 0)
                 {
                     for (int i = 0, count = Grid2.SelectedRowIndexArray.Length; i < count; i++)
                     {
                         int rowIndex = Grid2.SelectedRowIndexArray[i];
                         if (Grid2.AllowPaging && !Grid2.IsDatabasePaging)
                         {
                             rowIndex = Grid2.PageIndex * Grid2.PageSize + rowIndex;
                         }
                         foreach (object key in Grid2.DataKeys[rowIndex])
                         {
                               delete(Convert.ToString (key));
                         }
                     }
 
                    FineUI.Alert.ShowInParent("删除成功！");
                 }
                 else
                 {
                     FineUI.Alert.ShowInParent("你没有选择行！");
                 }
 

前台grid: 
    <x:TemplateField Width ="40px" HeaderText="">
    <ItemTemplate>
        <asp:TextBox ID="TextBox2" runat="server"></asp:TextBox>
    </ItemTemplate>
    </x:TemplateField>

 

后台取值:  
   protected void Button1_Click(object sender, EventArgs e)
    {
        string s = "";
        for (int i = 0; i <= Grid1.Rows.Count - 1; i++)
        {
            s = s + Request.Form["Grid1_" + i.ToString() + "$TextBox2"] + "_";
        }
        FineUI.Alert.Show(s);
    }
------------------------------------------------------
后台动态修改window的宽度,高度?  写法适用于FineUI其它容器控件，比如说panel,form...
protected void Button1_Click(object sender, EventArgs e)  
	{            
		FineUI.PageContext.RegisterStartupScript("Ext.getDom(" + Window1.ClientID + ").style.width=900;");  
	}  
------------------------------------------------------
按钮异常后失效问题处理,有两种方式：
	1. 设置按钮的EnablePostBack="false"，然后代码btnCloseWin.OnClientClick = FineUI.ActiveWindow.GetHidePostBackReference();
	2. 直接代码：btnCloseWin.OnClientClick = FineUI.ActiveWindow.GetHidePostBackReference() + "return false;";
------------------------------------------------------母版页
你这个用到了母版页，无法实现Ajax，asp.net的母版页与内容页的执行顺序
 （1）母版页中控件Init事件；
 （2）内容页中Content控件Init事件；
 （3）母版页Init事件；
 （4）内容页Init事件；
 （5）内容页Load事件；
 （6）母版页Load事件；
 （7）内容页中Content控件Load事件；
 （8）内容页PreRender事件；
 （9）母版页PreRender事件；
 （10）母版页控件PreRender事件。
 （11）内容页中Content控件PreRender事件。 
每个内容页都会重新加载母版页一次，母版页的状态无法保持，所以目前这样，是不可能实现无刷新的
------------------------------------------------------母版页